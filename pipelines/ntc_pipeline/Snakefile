'''
A snakemake file to run the RCPA WGS PTP ntc qc pipeline
'''

import pathlib


def new_toml(output):
    p = pathlib.Path(output)
    p.touch()


def toml_files(wildcards):
    return [f"{wildcards.sample}/{f}.toml" for f in ['read_assessment', 'species']]


sample = ["ERR1305793"]

rule all:
    input: expand("{sample}/final.toml", sample=sample)

rule read_assessment:
    input: ["{sample}/R1.fq.gz", "{sample}/R2.fq.gz"]
    output: temp("{sample}/read_assessment.toml")
    benchmark: "{sample}/read_assessment_benchmark.txt"
    singularity: "../singularity/read_assessment.simg"
    params:
        file_type = 'raw'
    script:
        "../scripts/read_assessment.py"

rule run_kraken:
    input: "{sample}/trimmed_reads_assessment.toml"
    output: temp("{sample}/species.toml")
    benchmark: "{sample}/species_benchmark.txt"
    singularity: "../singularity/kraken2.simg"
    params:
        file_type = "trimmed",
        kraken_opts = ""
    threads: 2
    script:
        "../scripts/run_kraken2.py"

rule gather_toml:
    input: toml_files
    output: "{sample}/final.toml"
    run:
        for s in sample:
            shell(f"cp {s}/amr.toml {s}/final.toml")
