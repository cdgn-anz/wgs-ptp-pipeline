'''
A snakemake file to run the RCPA WGS PTP ntc qc pipeline
'''

import pathlib
import pandas as pd

RULE_TOML = ['read_assessment', 'species']


def new_toml(output):
    p = pathlib.Path(output)
    p.touch()


def load_tab(filename, sample_type):
    tab = pd.read_csv(filename, engine="python", sep=None)
    tab = tab.query(f"SAMPLE_TYPE == '{sample_type}'")
    tab = tab.set_index("SAMPLE_ID", drop=False)
    return tab


def get_fastq(wildcards):
    sample_id = wildcards.sample
    return sample.loc[sample_id][["R1", "R2"]].to_list()


sample = load_tab(config['input'], 'ntc')

rule all:
    input: "ntc.toml"

rule read_assessment:
    input: get_fastq
    output: temp("{sample}/read_assessment.toml")
    benchmark: "{sample}/read_assessment_benchmark.txt"
    singularity: "../singularity_images/read_assessment.simg"
    params:
        file_type = 'raw'
    script:
        "../scripts/read_assessment.py"

rule run_kraken:
    input: "{sample}/read_assessment.toml"
    output: temp("{sample}/species.toml")
    benchmark: "{sample}/species_benchmark.txt"
    singularity: "../singularity_images/kraken2.simg"
    params:
        file_type = "raw",
        kraken_opts = ""
    threads: 2
    script:
        "../scripts/run_kraken2.py"

rule gather_toml:
    input: expand("{sample}/species.toml", sample=sample.index)
    output: "ntc.toml"
    run:
        shell(f"cat {' '.join(input)} >> {output[0]}")
